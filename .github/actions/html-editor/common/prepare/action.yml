name: HtmlEditor prepare
description: Making ready HtmlEditor source code for the next job steps
inputs:
  branch:
    description: DevExtreme branch to checkout
    required: true
  working-directory:
    description: DevExtreme checkout directory
    required: true
    default: devextreme-repo
  devextreme-package-directory:
    description: DevExtreme package path
    default: devextreme-repo
  devextreme-scss-package-directory:
    description: DevExtreme scss package path
    required: true
    default: devextreme-repo
  node-version:
    description: Node.js version
    required: true
    default: '20'
runs:
  using: composite
  steps:
    - name: Checkout DevExtreme branch
      uses: actions/checkout@v4
      with:
        repository: devexpress/devextreme
        ref: ${{ inputs.branch }}
        path: ${{ inputs.working-directory }}

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9

    - name: Restore pnpm cache
      uses: actions/cache@v4
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: ${{ runner.os }}-pnpm

#    - name: Restore npm cache
#      uses: actions/cache@v4
#      with:
#        path: ./.npm
#        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
#        restore-keys: ${{ runner.os }}-npm

    - name: Install .NET 6 SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x

    - name: Install dependencies
      shell: bash
      working-directory: ${{ inputs.working-directory }}
#      run: npm ci --no-audit --no-fund --cache ./.npm
      run: pnpm install --frozen-lockfile

    - name: Download quill ci package
      uses: actions/download-artifact@v4
      with:
        name: quill-package
        path: ${{ inputs.devextreme-package-directory }}

    - name: Install quill ci package
      shell: bash
      working-directory: ${{ inputs.devextreme-package-directory }}
      run: pnpm install devextreme-quill-0.0.0-ci.tgz
